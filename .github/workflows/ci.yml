name: Automatic CI

on:
  push:
    branches:
      - develop

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CI_COMMIT_MESSAGE: Automatic CI for push on main and Docker Hub

jobs:
  semantic_version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      version_tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify repository and list commits
        run: |
          echo "Verifying repository details..."
          git config --get remote.origin.url  # Verifica la URL del repositorio remoto
          git branch -a  # Lista las ramas disponibles
          git log --oneline -5  # Lista los últimos 5 commits
          git tag  # Lista todas las etiquetas disponibles

      - name: Perform semantic version
        id: semantic_version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}-prerelease${increment}"
          user_format_type: "csv"
          bump_each_commit: true
          search_commit_body: false

      - name: Show semantic version info
        run: |
          echo "Generated version: ${{ steps.semantic_version.outputs.version }}"
          echo "Version type: ${{ steps.semantic_version.outputs.version_type }}"
          echo "Current commit: ${{ steps.semantic_version.outputs.current_commit }}"
          echo "Previous version: ${{ steps.semantic_version.outputs.previous_version }}"
          echo "Previous commit: ${{ steps.semantic_version.outputs.previous_commit }}"

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          custom_tag: ${{ steps.semantic_version.outputs.version_tag }}
          tag_prefix: ""
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Show tag version info
        run: |
          echo "Custom Tag: ${{ steps.tag_version.outputs.new_tag }}"
          echo "Version: ${{ steps.semantic_version.outputs.version_tag }}"

      - name: "Build Changelog with Configuration"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fromTag: v${{ steps.semantic_version.outputs.previous_version }}
          toTag: ${{ steps.tag_version.outputs.new_tag }}
          mode: "COMMIT"
          configurationJson: '{
              "categories": [
                {
                  "title": "## 🚀 Features",
                  "labels": ["feat"]
                },
                {
                  "title": "## 🐛 Fixes",
                  "labels": ["fix"]
                },
                {
                  "title": "## 📚 Documentation",
                  "labels": ["docs"]
                },
                {
                  "title": "## 🎨 Code Style",
                  "labels": ["style"]
                },
                {
                  "title": "## 🔨 Refactor",
                  "labels": ["refactor"]
                },
                {
                  "title": "## 🧪 Tests",
                  "labels": ["test"]
                },
                {
                  "title": "## 🛠️ Maintenance",
                  "labels": ["chore"]
                },
                {
                  "title": "## 📝 Merge Commits",
                  "labels": [],
                  "rules": [
                    {
                      "pattern": "Merge branch",
                      "on_property": "title"
                    }
                  ]
                },
                {
                  "title": "## 🔄 Uncategorized Commits",
                  "labels": []
                }
              ]
            }'

      - name: Show Changelog
        run: |
          echo "Changelog generated: ${{ steps.build_changelog.outputs.changelog }}"

      - name: Create production release
        uses: ncipollo/release-action@v1
        id: release
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.semantic_version.outputs.version_tag }}
          body: ${{ steps.build_changelog.outputs.changelog }}
          draft: false
          prerelease: false
          allowUpdates: true
          commit: ${{ steps.semantic_version.outputs.current_commit }}
          
      - name: Show release details
        run: |
          echo "Release created: ${{ steps.release.outputs.html_url }}"

      - name: Get Commit Author Email
        id: get_email
        run: |
          git log -1 --pretty=format:'%ae'
        shell: bash
        continue-on-error: true

      - name: Get Commit Author Name
        id: get_name
        run: |
          git log -1 --pretty=format:'%an'
        shell: bash
        continue-on-error: true

      - name: Configure Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Ensure CHANGELOG.md exists
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            git add CHANGELOG.md
            git commit -m "chore(docs): create initial CHANGELOG.md"
          fi

      - name: Update CHANGELOG
        run: |          
          changelog='${{ steps.build_changelog.outputs.changelog }}'
          escaped_changelog=$(printf '%s\n' "$changelog" | sed 's/\\/&&/g;s/^[[:blank:]]/\\&/;s/$/\\/')
          sed -i "2i ${escaped_changelog%?}" CHANGELOG.md
          sed -i "2i ## ${{ steps.semantic_version.outputs.version_tag }} - $(date +'%d-%m-%Y')" CHANGELOG.md
          git add -A && git commit -m "chore(docs): update CHANGELOG.MD" || echo "No changes to commit"
          git push origin develop

  docker:
    runs-on: ubuntu-latest
    needs: semantic_version
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker Login
        id: docker_login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Set up QEMU (Optional for multi-platform builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: docker_buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          use: true

      - name: Inspect Buildx builder
        run: docker buildx inspect --bootstrap

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker Image
        id: docker_release
        env:
          NEW_VERSION: ${{ needs.semantic_version.outputs.version_tag }}
        run: |
          docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v8,windows/amd64 \
          -t javiertrombetta/capif-back:$NEW_VERSION \
          --push \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache .

          docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v8,windows/amd64 \
          -t javiertrombetta/capif-back:latest \
          --push \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache .
