services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: javiertrombetta/capif-back:latest
    container_name: capif-back
    restart: always
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      postgres:
        condition: service_healthy
      # redis:
      #   condition: service_healthy
    environment:
    # Base de Datos
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}

      # Configuración de la Aplicación
      NODE_ENV: production.local
      PORT: ${PORT}
      GLOBAL_PREFIX: ${GLOBAL_PREFIX}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      COOKIE_MAX_AGE: ${COOKIE_MAX_AGE}
      EMAIL_TOKEN_EXPIRATION: ${EMAIL_TOKEN_EXPIRATION}
      RESET_TOKEN_EXPIRATION: ${RESET_TOKEN_EXPIRATION}
      MAX_LOGIN_ATTEMPTS: ${MAX_LOGIN_ATTEMPTS}
      UPLOAD_DIR: ${UPLOAD_DIR}
      CAPIF_EMAIL_RECEIVER: ${CAPIF_EMAIL_RECEIVER}
      ADMIN_PRINCIPAL_EMAIL: ${ADMIN_PRINCIPAL_EMAIL}
      ADMIN_PRINCIPAL_PASSWORD: ${ADMIN_PRINCIPAL_PASSWORD}

      # Redis
      # REDIS_HOST: ${REDIS_HOST}
      # REDIS_PORT: ${REDIS_PORT}
      # REDIS_NAME: ${REDIS_NAME}

      # Timezone
      TZ: ${TZ}

      # Transport
      FRONTEND_URL: ${FRONTEND_URL}

      # SMTP (Correo Electrónico)
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_SECURE: ${SMTP_SECURE}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      EMAIL_FROM: ${EMAIL_FROM}

      # FTP
      FTP_HOST: ${FTP_HOST}
      FTP_USER: ${FTP_USER}
      FTP_PASSWORD: ${FTP_PASSWORD}
      FTP_PORT: ${FTP_PORT}

    networks:
      - capif-net

  postgres:
    image: postgres:17.2-alpine3.21
    container_name: postgres
    restart: always
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      # POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      # POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
    volumes:
      - postgresdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - capif-net

  # redis:
  #   image: redis:7.4.2-alpine3.21
  #   container_name: redis
  #   restart: always
  #   ports:
  #     - '6379:6379'
  #   environment:
  #     TZ: ${TZ}
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - capif-net

volumes:
  postgresdata:

networks:
  capif-net:
    driver: bridge