services:
  postgres:
    image: postgres:15.8-alpine3.20
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}      
      TZ: ${TZ}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      retries: 5
      start_period: 60s
    restart: always

  app:
    build: .
    container_name: capif-back
    environment:
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      NODE_ENV: production
      JWT_SECRET: ${JWT_SECRET}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      TZ: ${TZ}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - .:/app
    networks:
      - app-network
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    environment:
      TZ: ${TZ}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - app-network
    restart: always

volumes:
  postgresdata:

networks:
  app-network:
    driver: bridge