services:
  frontend:
      image: javiertrombetta/capif-front:latest
      container_name: capif-front
      restart: unless-stopped
      ports:
        - "${NEXT_PUBLIC_PORT}:${NEXT_PUBLIC_PORT}"
      environment:
        - NODE_ENV=production
        - NEXT_PUBLIC_PORT=${NEXT_PUBLIC_PORT}
      env_file:
      - .env.prod.local
      depends_on:
        - backend
      networks:
        - capif-net

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: javiertrombetta/capif-back:latest
    container_name: capif-back
    restart: always
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
    # Base de Datos
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_SSL: ${DB_SSL}

      # Configuración de la Aplicación
      NODE_ENV: production.local
      GLOBAL_PREFIX: ${GLOBAL_PREFIX}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      COOKIE_MAX_AGE: ${COOKIE_MAX_AGE}
      SESSION_EXPIRATION_TIME: ${SESSION_EXPIRATION_TIME}
      PORT: ${PORT}
      EMAIL_TOKEN_EXPIRATION: ${EMAIL_TOKEN_EXPIRATION}
      RESET_TOKEN_EXPIRATION: ${RESET_TOKEN_EXPIRATION}
      MAX_LOGIN_ATTEMPTS: ${MAX_LOGIN_ATTEMPTS}
      UPLOAD_DIR: ${UPLOAD_DIR}
      USER_DEPURAR_DAYS: ${USER_DEPURAR_DAYS}
      USER_DESHABILITAR_DAYS: ${USER_DESHABILITAR_DAYS}
      USER_CLEANUP_DAYS: ${USER_CLEANUP_DAYS}
      CAPIF_EMAIL_RECEIVER: ${CAPIF_EMAIL_RECEIVER}
      ADMIN_PRINCIPAL_EMAIL: ${ADMIN_PRINCIPAL_EMAIL}
      ADMIN_PRINCIPAL_PASSWORD: ${ADMIN_PRINCIPAL_PASSWORD}

      # Timezone
      TZ: ${TZ}

      # Transport
      FRONTEND_URL: ${FRONTEND_URL}

      # SMTP (Correo Electrónico)
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_SECURE: ${SMTP_SECURE}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      EMAIL_FROM: ${EMAIL_FROM}

      # FTP
      FTP_HOST: ${FTP_HOST}
      FTP_USER: ${FTP_USER}
      FTP_PASSWORD: ${FTP_PASSWORD}
      FTP_PORT: ${FTP_PORT}

      # reCAPTCHA
      RECAPTCHA_SECRET_KEY: ${RECAPTCHA_SECRET_KEY}

    networks:
      - capif-net

  postgres:
    image: postgres:17.2-alpine3.21
    container_name: postgres
    restart: always
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgresdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} && psql -U ${DB_USER} -d ${DB_NAME} -c 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 15
      start_period: 60s
      timeout: 10s
    networks:
      - capif-net

volumes:
  postgresdata:

networks:
  capif-net:
    driver: bridge